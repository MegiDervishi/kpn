"Resource: /Users/megidervishi/Documents/kpn/kahn.ml": "\002\179w(\157\166\174\170AQ\151\151O\000\005\015"
"Rule: ocaml: ml -> cmo & cmi (%=kahn )": ">\142\155tgri\134^\018\184M0\015\137\200"
"Resource: /Users/megidervishi/Documents/kpn/sequential.ml": "P+\200V\015\251z\150\178#\003\247,J\203\018"
"Rule: ocaml dependencies ml (%=kahn )": "\253\186Pid\200\236\227?\246\173Y=\245\233\132"
"Rule: ocaml: ml -> cmo & cmi (%=network )": "\236V\224\017\024\018$\011g\195\196z\139\204\127O"
"Rule: ocaml: ml & cmi -> cmx & o (%=kahn )": "\203]\225UE\245\221\197NQ\t0k\151\214:"
"Rule: ocaml dependencies ml (%=mandelbrot )": "\243\188\031\139R\219\1874!\183\166\206\178\163?\007"
"Resource: /Users/megidervishi/Documents/kpn/tictactoe.ml": "f\215W6\b+\238a\223\233\238\254=\162*\193"
"Rule: ocaml dependencies ml (%=sequential )": "\023X\n?\246\224c:d\231y\029\136\0254\208"
"Rule: ocaml: ml -> cmo & cmi (%=tictactoe )": "\253y\254\164\203f\181?A\158w\175\220\206\131I"
"Rule: ocaml: ml & cmi -> cmx & o (%=network )": "9\209\237\029c\226\ny\249J\150-\205[\016\007"
"Rule: ocaml: ml & cmi -> cmx & o (%=mandelbrot )": "I\135\223\180\012m2B\028\020\227\167\247,<c"
"Resource: /Users/megidervishi/Documents/kpn/network.ml": "\160O\179\143\029\172\249<9\253\225Y\138\1988T"
"Rule: ocaml: ml & cmi -> cmx & o (%=tictactoe )": "{\224\209\026f\028\130[:R`&\253m~\012"
"Rule: ocaml: ml & cmi -> cmx & o (%=sequential )": "\r\r\222A\168\223\151\152j\139\n\129\173}\2380"
"Resource: /Users/megidervishi/Documents/kpn/mandelbrot.ml": "\137\\\149/\1877\214\"p75\247<\218=\162"
"Rule: ocaml: ml -> cmo & cmi (%=mandelbrot )": "|\031\020\146\197\186\181\159\005_\135\222\r2\139\231"
"Rule: ocaml dependencies ml (%=network )": "\021\204\157\029i6\by\150s\129\155\227\222\196T"
"Rule: ocaml dependencies ml (%=tictactoe )": "\179`I\192\1905R\029K7\134\b\159\022\131\205"
"Rule: ocaml: ml -> cmo & cmi (%=sequential )": "\245z\227R\226SE\136$\230a\016\195i\031^"
"Rule: ocaml: cmx* & o* -> native (%=mandelbrot )": "*\007\169\201\130g\186\213aQ\160\167\228&\166M"
"Rule: ocaml: cmx* & o* -> native (%=tictactoe )": "5\255\191\227M1\246\215\017M\241(\022\242\027\225"
